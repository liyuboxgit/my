<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="liyu.test.mybatis.mapper.BlogMapper">
  <cache type="liyu.test.mybatis.cache.MybatisRedisCache" flushInterval="5000" eviction="FIFO" readOnly="true"/>
  
  <delete id="deleteByPrimaryKey">
  	delete from blog where id=#{id}
  </delete>
  
  <resultMap type="liyu.test.mybatis.mapper.Blog" id="joinMap">
  	<result column="login_name" property="loginName"/>
  	<association property="user" column="author" select="liyu.test.mybatis.mapper.UserMapper.find" fetchType="lazy"></association>
  </resultMap>
  
  <sql id="cols">
  	id as id
  </sql>
  
  <select id="findList" resultMap="joinMap">
    select * from blog 
  </select>
  
  <select id="find" resultType="liyu.test.mybatis.mapper.Blog">
    select id,name,login_name as loginname from blog where id=#{id}
  </select>
  
  <select id="findListCount" resultType="java.lang.Integer">
  	select count(*) from blog
  </select>
  <insert id="create">
  	insert into blog (id,name) values(#{id},#{name})
  </insert>
  <update id="update">
  	update blog set name=#{name} where 1=0 
  </update>
  
  <!-- 动态更新 -->
  <update id="updateColumn">
  	update ${tableName} set ${columnName}=#{value} where id = #{primaryKey}	
  </update>
</mapper>