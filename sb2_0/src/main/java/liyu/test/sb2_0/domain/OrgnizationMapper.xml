<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="liyu.test.sb2_0.domain.Orgnization">
    <resultMap type="liyu.test.sb2_0.domain.Orgnization" id="BaseResultMap"></resultMap>
    <sql id="cols">
        create_time,update_time,version,org_name,pid,sn,id
    </sql>
    <sql id="whereSql">
        <where>
            <if test="id != null">
                and id=#{id}
            </if>
            <if test="create_time != null">
                and create_time=#{create_time}
            </if>
            <if test="update_time != null">
                and update_time=#{update_time}
            </if>
            <if test="version != null">
                and version=#{version}
            </if>
            <if test="org_name != null">
                and org_name=#{org_name}
            </if>
            <if test="pid != null">
                and pid=#{pid}
            </if>
            <if test="sn != null">
                and sn=#{sn}
            </if>
        </where>
    </sql>
    <sql id="pageSql">
        <if test="pageNo!=null and pageSize!=null">
            limit #{pageNo},#{pageSize}
        </if>
    </sql>
    <insert id="insert">
        insert into se_orgnization(create_time,update_time,version,org_name,pid,sn) values(now(),now(),0,#{org_name},#{pid},#{sn})
    </insert>
    <update id="merge">
        update se_orgnization set create_time=#{create_time},version=#{version},org_name=#{org_name},pid=#{pid},sn=#{sn},version=version+1,update_time=now() where id=#{id} and version=#{version}
    </update>
    <update id="dynamicUpdate">
        update ${tableName} set ${columnName}=#{value},version=version+1,update_time=now() where id = #{primaryKey} and version=#{version}
    </update>
    <delete id="delete">
        delete from se_orgnization where id=#{id} and version=#{version}
    </delete>
    <select id="findone" resultMap="BaseResultMap">
        select <include refid="cols"/> from se_orgnization where id=#{id}
    </select>
    <select id="findlist" resultMap="BaseResultMap">
        select <include refid="cols"/> from se_orgnization <include refid="whereSql"/> <include refid="pageSql"/>
    </select>
    <select id="findcount" resultType="java.lang.Long">
        select count(1) from se_orgnization <include refid="whereSql"/>
    </select>
</mapper>